blueprint:
  name: "Ventilatiesysteem Master Bedroom"
  description: >
    Automatiseert de ventilator in de Master Bedroom op basis van temperatuur en weersomstandigheden.
  
  domain: automation
  input:
    fan_switch:
      name: Ventilator Switch
      description: De schakelaar voor de ventilator.
      selector:
        entity:
          domain: switch

    temp_sensor:
      name: Temperatuursensor Binnen
      description: De temperatuursensor voor de kamer.
      selector:
        entity:
          domain: sensor
          device_class: temperature

    weather_sensor:
      name: Weersensor
      description: De sensor die de buitentemperatuur, neerslag, luchtvochtigheid, en windsnelheid doorgeeft.
      selector:
        entity:
          domain: weather

    desired_temp:
      name: Gewenste Kamertemperatuur
      description: De temperatuur die je wilt behouden in de Master Bedroom.
      default: 22
      selector:
        number:
          min: 16
          max: 30
          unit_of_measurement: "Â°C"

    rain_threshold:
      name: Regendrempel
      description: De hoeveelheid regen waarbij de ventilator uitgeschakeld moet worden.
      default: 0.1
      selector:
        number:
          min: 0
          max: 10
          unit_of_measurement: "mm"

    update_interval:
      name: Weerupdate-interval
      description: Hoe vaak de weerdata moet worden bijgewerkt.
      default: 5
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: "min"

    overwork_duration:
      name: Overwerktimer
      description: Hoe lang de ventilator handmatig aan mag blijven voordat de automatisering het weer overneemt.
      default: 30
      selector:
        number:
          min: 1
          max: 120
          unit_of_measurement: "min"

variables:
  weather_entity_id: !input weather_sensor
  temp_sensor_entity_id: !input temp_sensor
  fan_switch_entity_id: !input fan_switch
  desired_temp_value: !input desired_temp
  rain_threshold_value: !input rain_threshold
  overwork_duration: !input overwork_duration

  # Buitentemperatuur, neerslag en andere weerinformatie
  buiten_temp: "{{ state_attr(weather_entity_id, 'temperature') | float(0) }}"
  neerslag: "{{ state_attr(weather_entity_id, 'precipitation') | float(0) }}"
  luchtvochtigheid: "{{ state_attr(weather_entity_id, 'humidity') | float(0) }}"
  windsnelheid: "{{ state_attr(weather_entity_id, 'wind_speed') | float(0) }}"

  # Binnentemperatuur logging
  binnentemperatuur: >
    {% if states(temp_sensor_entity_id) != 'unavailable' and states(temp_sensor_entity_id) != 'unknown' %}
      {{ states(temp_sensor_entity_id) | float(0) }}
    {% else %}
      0
    {% endif %}

trigger:
  # Periodiek bijwerken van de condities
  - platform: time_pattern
    minutes: !input update_interval

  # Handmatige bediening van de ventilator
  - platform: state
    entity_id: !input fan_switch
    for:
      minutes: !input overwork_duration

action:
  - service: system_log.write
    data:
      message: >
        "De ventilator is handmatig bediend. Het systeem controleert de status na {{ overwork_duration }} minuten."
      level: info

  # Controleer de status van de ventilator voordat het script schakelt
  - choose:
      - conditions:
          # Ventilator uitschakelen als buitentemperatuur hoger is dan binnentemperatuur en de ventilator staat aan
          - condition: template
            value_template: >
              {{ binnentemperatuur != 0 and buiten_temp >= binnentemperatuur and is_state(fan_switch_entity_id, 'on') }}
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input fan_switch

      - conditions:
          # Ventilator aanzetten als de buitentemperatuur lager is dan de binnentemperatuur en de gewenste temperatuur nog niet is bereikt en de ventilator staat uit
          - condition: template
            value_template: >
              {{ binnentemperatuur != 0 and buiten_temp < binnentemperatuur and
                (binnentemperatuur > desired_temp_value or buiten_temp > desired_temp_value) and is_state(fan_switch_entity_id, 'off') }}
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input fan_switch

  # Na de ingestelde tijd neemt het script weer controle over
  - delay: "{{ overwork_duration * 60 }}"
  - service: homeassistant.turn_on
    target:
      entity_id: automation.ventilatiesysteem_master_bedroom
