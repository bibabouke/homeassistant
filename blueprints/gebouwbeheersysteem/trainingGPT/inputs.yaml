Nieuw inzicht: Custom Actions met dynamische invoer
Een specifiek stukje code dat me opviel en dat ik nog niet eerder had toegepast in mijn werk, is de combinatie van custom actions met dynamische !input en conditionele controles. Dit geeft enorm veel flexibiliteit aan de gebruiker om acties aan te passen zonder het blueprint script zelf te veranderen.

Hier is het specifieke stuk dat ik kan bewaren voor een volgende keer:


- if:
    - condition: template
      value_template: "{{ input_custom_action != none }}"
  then: !input "input_custom_action"


blueprint:
  name: Motion-activated Light
  description: Turn on a light when motion is detected.
  domain: automation
  input:
    motion_entity:
      name: Motion Sensor
      selector:
        entity:
          filter:
            device_class: motion
            domain: binary_sensor
    light_target:
      name: Light
      selector:
        target:
          entity:
            domain: light
    no_motion_wait:
      name: Wait time
      description: Time to leave the light on after last motion is detected.
      default: 120
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: seconds

# If motion is detected within the delay,
# we restart the script.
mode: restart
max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input motion_entity
    from: "off"
    to: "on"

action:
  - action: light.turn_on
    target: !input light_target
  - wait_for_trigger:
      platform: state
      entity_id: !input motion_entity
      from: "on"
      to: "off"
  - delay: !input no_motion_wait
  - action: light.turn_off
    target: !input light_target
    
