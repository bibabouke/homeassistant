blueprint:
  name: Ventilatiesysteem met Hysteresis en Regenoptie
  description: >
    Automatisch ventilatiesysteem met hysteresis, regendetectie, en bypass-optie per ventilator.
  domain: automation
  input:
    fan_switch:
      name: Ventilator Schakelaar
      description: "De ventilator die wordt bestuurd."
      selector:
        entity:
          domain: switch
    temp_sensor:
      name: Temperatuursensor Binnen
      description: "De sensor voor de temperatuur binnen."
      selector:
        entity:
          domain: sensor
          device_class: temperature
    weather_sensor:
      name: Weersensor Buiten
      description: "De sensor voor de buitentemperatuur en regen."
      selector:
        entity:
          domain: weather
    desired_temp:
      name: Gewenste Kamertemperatuur
      default: 21.0
      selector:
        number:
          min: 10
          max: 30
          step: 0.5
          unit_of_measurement: "째C"
    hysteresis:
      name: Hysteresis
      default: 0.5
      selector:
        number:
          min: 0.1
          max: 5.0
          step: 0.1
          unit_of_measurement: "째C"
    rain_threshold:
      name: Neerslagdrempel (in mm)
      default: 0.1
      selector:
        number:
          min: 0
          max: 10
          step: 0.1
          unit_of_measurement: "mm"
    disable_rain_shutdown:
      name: Uitschakeling bij regen uitschakelen
      description: "Schakel de ventilator niet uit bij regen, zelfs als de drempel is bereikt."
      default: false
      selector:
        boolean: {}

# Variabelen voor de ventilatie
variables:
  fan_switch_entity_id: !input 'fan_switch'
  temp_sensor_entity_id: !input 'temp_sensor'
  weather_entity_id: !input 'weather_sensor'
  desired_temp_value: !input 'desired_temp'
  hysteresis_value: !input 'hysteresis'
  rain_threshold_value: !input 'rain_threshold'
  disable_rain_shutdown: !input 'disable_rain_shutdown'
  update_interval_minutes: 5

  # Huidige temperatuur binnen
  binnentemperatuur: >
    {% set temp = states(temp_sensor_entity_id) %}
    {% if temp not in ['unknown', 'unavailable'] %}
      {{ temp | float }}
    {% else %}
      {{ states('sensor.last_known_binnentemperatuur') | float(21.0) }}
    {% endif %}

  # Huidige temperatuur buiten en neerslag
  buiten_temp: >
    {% set temp = state_attr(weather_entity_id, 'temperature') %}
    {% if temp is not none %}
      {{ temp | float }}
    {% else %}
      {{ states('sensor.last_known_buiten_temp') | float(15.0) }}
    {% endif %}

  neerslag: >
    {% set rain = state_attr(weather_entity_id, 'precipitation') %}
    {% if rain is not none %}
      {{ rain | float(0) }}
    {% else %}
      0
    {% endif %}

trigger:
  - platform: time_pattern
    minutes: 5

  - platform: state
    entity_id:
      - !input 'temp_sensor'
      - !input 'weather_sensor'

condition: []

action:
  - service: system_log.write
    data:
      message: >
        "Ventilatiecontrole uitgevoerd. Buiten temp: {{ buiten_temp }}째C, Binnentemp: {{ binnentemperatuur }}째C, Neerslag: {{ neerslag }} mm, Ventilator is {{ states(fan_switch_entity_id) }}."
      level: info

  # Neerslagdrempel check en bypass
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ neerslag >= rain_threshold_value
                 and not disable_rain_shutdown }}
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input 'fan_switch'
          - service: system_log.write
            data:
              message: "Ventilator uitgeschakeld wegens neerslag."
              level: info
      - conditions:
          - condition: template
            value_template: >
              {{ binnentemperatuur >= desired_temp_value + hysteresis_value
                 and buiten_temp < binnentemperatuur
                 and neerslag < rain_threshold_value
                 and is_state(fan_switch_entity_id, 'off') }}
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input 'fan_switch'
          - service: system_log.write
            data:
              message: "Ventilator ingeschakeld."
              level: info

mode: single
