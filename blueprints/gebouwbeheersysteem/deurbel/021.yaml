blueprint:
  name: Lamp Kleur Verandering met Timer
  description: Sla de status van een lamp op en verander deze in een ingestelde kleur voor een bepaalde tijd.
  domain: automation
  input:
    trigger_button:
      name: Activeringsknop
      description: Selecteer de knop die de actie start.
      selector:
        entity:
          domain: sensor
    lamp:
      name: Lamp
      description: Selecteer de lamp die van status moet veranderen.
      selector:
        entity:
          domain: light
    kleur:
      name: Kleur
      description: Selecteer de kleur waarin de lamp moet veranderen.
      selector:
        color_rgb: {}
    delay_duration:
      name: Tijd voor statusopslag (minuten)
      description: Hoe lang de oorspronkelijke status moet worden opgeslagen voordat de lamp van kleur verandert.
      default: 10
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: minuten
    on_duration:
      name: Lamp actief tijdsduur (seconden)
      description: Hoe lang de lamp in de nieuwe kleur moet blijven.
      default: 30
      selector:
        number:
          min: 1
          max: 600
          unit_of_measurement: seconden

trigger:
  - platform: state
    entity_id: !input 'trigger_button'

variables:
  lamp_entity: "{{ states[!input 'lamp'].entity_id }}"  # Definieer lamp_entity via entity_id
  original_state: "{{ states[lamp_entity].state }}"  # Oorspronkelijke status (aan/uit)
  original_brightness: "{{ state_attr(lamp_entity, 'brightness') if state_attr(lamp_entity, 'brightness') is not none else 255 }}"  # Oorspronkelijke helderheid
  original_rgb_color: "{{ state_attr(lamp_entity, 'rgb_color') if state_attr(lamp_entity, 'rgb_color') is not none else [255, 255, 255] }}"  # Oorspronkelijke kleur

action:
  - delay:
      minutes: !input 'delay_duration'

  - service: light.turn_on
    target:
      entity_id: !input 'lamp'
    data:
      rgb_color: !input 'kleur'

  - delay:
      seconds: !input 'on_duration'

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ original_state == 'on' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input 'lamp'
            data:
              brightness: "{{ original_brightness }}"
              rgb_color: "{{ original_rgb_color }}"
      - conditions:
          - condition: template
            value_template: "{{ original_state == 'off' }}"
        sequence:
          - service: light.turn_off
            target:
              entity_id: !input 'lamp'

mode: single
