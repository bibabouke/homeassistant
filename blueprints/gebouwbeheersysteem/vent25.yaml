blueprint:
  name: Ventilatiesysteem met Hysteresis
  description: Automatisch aan- en uitschakelen van de ventilator op basis van binnen- en buitentemperatuur met hysteresis
  domain: automation
  input:
    fan_switch:
      name: Ventilator
      description: De ventilator die moet worden geschakeld
      selector:
        entity:
          domain: switch
    temp_sensor:
      name: Temperatuursensor Binnen
      description: Sensor die de temperatuur binnen meet
      selector:
        entity:
          domain: sensor
          device_class: temperature
    weather_sensor:
      name: Weersensor
      description: Sensor die de buitentemperatuur meet
      selector:
        entity:
          domain: weather
    desired_temp:
      name: Gewenste Temperatuur
      description: Gewenste temperatuur voor de kamer
      selector:
        number:
          min: 15.0
          max: 30.0
          step: 0.1
          unit_of_measurement: °C
    hysteresis:
      name: Hysteresis
      description: Het verschil waarmee de temperatuur moet stijgen of dalen voordat de ventilator schakelt
      selector:
        number:
          min: 0.1
          max: 2.0
          step: 0.1
          unit_of_measurement: °C

variables:
  weather_entity_id: !input weather_sensor
  temp_sensor_entity_id: !input temp_sensor
  fan_switch_entity_id: !input fan_switch
  desired_temp_value: !input desired_temp
  hysteresis_value: !input hysteresis
  buiten_temp: "{{ state_attr(weather_entity_id, 'temperature') | float(0) }}"
  binnentemperatuur: "{% if states(temp_sensor_entity_id) != 'unavailable' and states(temp_sensor_entity_id) != 'unknown' %} {{ states(temp_sensor_entity_id) | float(0) }} {% else %} 0 {% endif %}"

trigger:
  - platform: time_pattern
    minutes: 5
  - platform: state
    entity_id: !input fan_switch
    for:
      minutes: 5

condition: []

action:
  - service: system_log.write
    data:
      message: >
        "Buiten temp: {{ buiten_temp }}, Binnentemp: {{ binnentemperatuur }}, Ventilator status: {{ is_state(fan_switch_entity_id, 'on') }}"
      level: info

  # Ventilator uitzetten als de binnentemperatuur gelijk of lager is dan de gewenste temperatuur
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ binnentemperatuur <= desired_temp_value and is_state(fan_switch_entity_id, 'on') }}"
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input fan_switch

  # Ventilator inschakelen als de binnentemperatuur boven de gewenste temperatuur plus hysteresis is en de buitentemperatuur lager is
      - conditions:
          - condition: template
            value_template: "{{ binnentemperatuur >= (desired_temp_value + hysteresis_value) and buiten_temp < binnentemperatuur and is_state(fan_switch_entity_id, 'off') }}"
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input fan_switch

mode: single
