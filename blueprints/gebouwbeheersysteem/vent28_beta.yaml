blueprint:
  name: Ventilatiesysteem met Hysteresis
  description: Ventilatiesysteem met ingestelde drempelwaarden en hysteresis voor temperatuursregeling
  domain: automation
  input:
    fan_switch:
      name: Ventilator schakelaar
      description: Schakelaar om de ventilator aan/uit te zetten
      selector:
        entity:
          domain: switch
    temp_sensor:
      name: Temperatuursensor
      description: Sensor om de binnentemperatuur te meten
      selector:
        entity:
          domain: sensor
          device_class: temperature
    weather_sensor:
      name: Weersensor
      description: Weersensor om de buitentemperatuur te meten
      selector:
        entity:
          domain: weather
    desired_temp:
      name: Gewenste temperatuur
      description: De temperatuur waarbij de ventilator moet stoppen
      default: 21.0
      selector:
        number:
          min: 10.0
          max: 30.0
          step: 0.1
          unit_of_measurement: Â°C
    hysteresis:
      name: Hysteresis
      description: Hysteresis waarde voor aan- en uitschakelen van de ventilator
      default: 0.5
      selector:
        number:
          min: 0.1
          max: 5.0
          step: 0.1
          unit_of_measurement: Â°C
    update_interval:
      name: Update interval
      description: Interval om de sensoren bij te werken (in minuten)
      default: 5
      selector:
        number:
          min: 1
          max: 60
          step: 1
          unit_of_measurement: minuten

variables:
  weather_entity_id: !input weather_sensor
  temp_sensor_entity_id: !input temp_sensor
  fan_switch_entity_id: !input fan_switch
  desired_temp_value: !input desired_temp
  hysteresis_value: !input hysteresis
  update_interval: !input update_interval
  buiten_temp: "{{ state_attr(weather_entity_id, 'temperature') | float(0) }}"
  binnentemperatuur: >
    {% if states(temp_sensor_entity_id) != 'unavailable' and states(temp_sensor_entity_id) != 'unknown' %}
      {{ states(temp_sensor_entity_id) | float(0) }}
    {% else %}
      0
    {% endif %}

trigger:
  - platform: time_pattern
    minutes: 5
  - platform: state
    entity_id: !input fan_switch
    for:
      minutes: 5

action:
  - service: system_log.write
    data:
      message: >
        "Buiten temp: {{ buiten_temp }}, Binnentemp: {{ binnentemperatuur }}, Ventilator status: {{ is_state(fan_switch_entity_id, 'on') }}"
      level: info
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ binnentemperatuur <= desired_temp_value and is_state(fan_switch_entity_id, 'on') }}
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input fan_switch
      - conditions:
          - condition: template
            value_template: >
              {{ binnentemperatuur >= (desired_temp_value + hysteresis_value) and buiten_temp < binnentemperatuur and is_state(fan_switch_entity_id, 'off') }}
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input fan_switch
  - delay: "{{ update_interval * 60 }}"

mode: single
