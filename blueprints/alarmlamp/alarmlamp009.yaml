#Versie alarmlamp 009
blueprint:
  name: Alarmlamp Automatisering - Direct Test
  description: "Schakel meerdere lampen rood en sla de originele status van elke lamp op."
  domain: automation
  input:
    knop_sensor:
      name: Knop Sensor
      description: "Selecteer de knop sensor."
      selector:
        entity:
          domain: sensor
    lamp_entities:
      name: Lampen
      description: "Selecteer één of meerdere lampen."
      selector:
        target:
          entity:
            domain: light
    status_storage:
      name: Alert Lampen Status
      description: "Slaat de status op van alle lampen."
      default: input_text.alert_lampen_status
      selector:
        entity:
          domain: input_text
    active_status:
      name: Alert Lampen Script Actief
      description: "Geeft aan of het script al actief is"
      default: input_boolean.alert_lampen_script_actief
      selector:
        entity:
          domain: input_boolean

trigger:
  - platform: state
    entity_id: !input 'knop_sensor'
    to: "on"

condition:
  - condition: state
    entity_id: !input 'active_status'
    state: 'off'

action:
  - service: input_boolean.turn_on
    target:
      entity_id: !input 'active_status'
  - variables:
      lampen: !input 'lamp_entities'
  - service: logbook.log
    data:
      name: "Debug"
      message: "Lampen: {{ lampen }}"
  - variables:
      lamp_data: >
        {% set data = {} %}
        {% for lamp in lampen %}
        {% set data = data.update({lamp: {
            "status": states(lamp),
            "kleur": state_attr(lamp, "color_name") if state_attr(lamp, "color_name") else "unknown",
            "helderheid": state_attr(lamp, "brightness") if state_attr(lamp, "brightness") else 0,
            "color_temp": state_attr(lamp, "color_temp") if state_attr(lamp, "color_temp") else "unknown"
        }}) %}
        {% endfor %}
        {{ data }}
  - service: logbook.log
    data:
      name: "Debug"
      message: "Lamp Data: {{ lamp_data }}"
  - service: input_text.set_value
    data:
      entity_id: !input 'status_storage'
      value: "{{ lamp_data }}"
  # Directe poging om de lampen rood te maken zonder gebruik van repeat
  - service: light.turn_on
    target:
      entity_id: !input 'lamp_entities'
    data:
      color_name: "red"
  - service: input_boolean.turn_off
    target:
      entity_id: !input 'active_status'
