blueprint:
  name: Dynamische Ventilator Controle
  description: "Bedient een ventilator op basis van temperatuur en instelbare hysteresis."
  domain: automation
  version: 1.05
  input:
    temp_sensor:
      name: Temperatuursensor
      description: "De sensor die de temperatuur meet in de ruimte."
      selector:
        entity:
          domain: sensor
          device_class: temperature
    fan_switch:
      name: Ventilator Schakelaar
      description: "De ventilator die automatisch wordt in- of uitgeschakeld."
      selector:
        entity:
          domain: switch
    hysteresis:
      name: Hysteresis
      description: "De marge om te voorkomen dat de ventilator te snel schakelt."
      default: 0.5
      selector:
        number:
          min: 0.1
          max: 5.0
          step: 0.1
          unit_of_measurement: "째C"
    desired_temperature:
      name: Gewenste Kamertemperatuur
      description: "De temperatuur waarbij de ventilator aan moet gaan."
      default: 22.0
      selector:
        number:
          min: 15.0
          max: 30.0
          step: 0.5
          unit_of_measurement: "째C"
    notify_device:
      name: Apparaat voor notificaties
      description: "Selecteer het apparaat dat meldingen ontvangt over de ventilatorstatus."
      selector:
        device:
          integration: mobile_app
    notification_message:
      name: Notificatiebericht
      description: "Het bericht dat verstuurd wordt als de ventilator wordt in- of uitgeschakeld."
      default: "De ventilator is geschakeld."
      selector:
        text:
          multiline: true

variables:
  fan_switch_entity_id: !input 'fan_switch'
  temp_sensor_entity_id: !input 'temp_sensor'
  hysteresis_value: !input 'hysteresis'
  target_temp: !input 'desired_temperature'

trigger:
  - platform: numeric_state
    entity_id: !input 'temp_sensor'
    above: "{{ target_temp - hysteresis_value }}"
    below: "{{ target_temp + hysteresis_value }}"

action:
  - if:
      - condition: template
        value_template: >
          {{ states(fan_switch_entity_id) == 'off' and 
             states(temp_sensor_entity_id) | float > (target_temp + hysteresis_value) }}
    then:
      - service: switch.turn_on
        target:
          entity_id: "{{ fan_switch_entity_id }}"
      - service: notify.mobile_app_{{ device_id }}
        data:
          message: "{{ notification_message }} De ventilator is aangezet. Huidige temperatuur: {{ states(temp_sensor_entity_id) }}째C."
  - if:
      - condition: template
        value_template: >
          {{ states(fan_switch_entity_id) == 'on' and 
             states(temp_sensor_entity_id) | float < (target_temp - hysteresis_value) }}
    then:
      - service: switch.turn_off
        target:
          entity_id: "{{ fan_switch_entity_id }}"
      - service: notify.mobile_app_{{ device_id }}
        data:
          message: "{{ notification_message }} De ventilator is uitgeschakeld. Huidige temperatuur: {{ states(temp_sensor_entity_id) }}째C."

mode: single
